/*                   Parts are taken from the TiC b.g                       */

// For those who want the bleeding edge
buildscript {
    repositories {
        mavenCentral()
		mavenLocal()
	jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
	}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven { // compatlayer
        name 'K-4u maven'
        url "http://maven.k-4u.nl/"
    }
    maven {
        name 'forge'
        url 'http://files.minecraftforge.net/maven'
    }
    maven {
         name "Tehnut Maven FS"
         url "http://tehnut.info/maven"
    }
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0"
group= "princess"
archivesBaseName = "tenergistics"

ext.configFile = file "build.properties"
configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}
configurations {
    deployerJars
}

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = config.minecraft_version_short + "-" + config.forge_version
    mappings = config.mappings
    runDir = "run"
    useDepAts = true
}

dependencies {
    deobfCompile "slimeknights:TConstruct:${config.minecraft_version}-${config.tcon_version}"
    deobfCompile "slimeknights.mantle:Mantle:${config.minecraft_version}-${config.mantle_version}"

    deobfCompile "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}:api"
    runtime "mezz.jei:jei_${config.minecraft_version}:${config.jei_version}"

    deobfCompile "mcp.mobius.waila:Hwyla:${config.hwyla_version}"
    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:${config.probe_version}"
    deobfCompile "cofh:RedstoneFlux:${config.redstoneflux_version}:universal"
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.2'
}

sourceSets {
    main {
        resources {
            srcDir 'resources'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
